{"version":3,"file":"js/883.ea5f5b1e.js","mappings":"2cAAKA,MAAM,qB,GAAXC,EAAAA,EAAAA,IAAAA,uSAAAA,EAAAA,gSAAAA,EAAAA,sTAAAA,EAAAA,+EAAAA,EAAAA,waAAAA,EAAAA,8KAAAA,EAAAA,yGAAAA,EAAAA,mGAAAA,EAAAA,8IAAAA,EAAAA,8cAAAA,EAAAA,6hBAAAA,I,GAA+BC,G,kCAA/BC,EAAAA,EAAAA,IA8CM,MA9CNC,EAAAC,E,eCCA,MAAMC,EAAS,CAAC,EAGVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,O","sources":["webpack://personal_website/./src/components/notes/ctfwriteup/HTB/Easy/GreenHorn/Writeup.md","webpack://personal_website/./src/components/notes/ctfwriteup/HTB/Easy/GreenHorn/Writeup.md?2055"],"sourcesContent":["<template><div class=\"component-writeup\"><h1>Recon</h1>\n<h2>Nmap</h2>\n<pre v-pre=\"\"><code>PORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)\n80/tcp   open  http    nginx 1.18.0 (Ubuntu)\n3000/tcp open  ppp?\n</code></pre>\n<h2>Port 80</h2>\n<p>Main web app (Pluck 4.7.8)\n<img src=\"./Screenshots/image_2.png\" alt=\"Screenshots2\"></p>\n<p>Potential Vulnerability\nPluck 4.7.8 RCE (<a href=\"https://www.exploit-db.com/exploits/51592\">https://www.exploit-db.com/exploits/51592</a>)</p>\n<ul>\n<li>Requires Authentication</li>\n</ul>\n<h1>Foothold (Port 3000)</h1>\n<p>Git Repository (Gitea 1.21.11)\n<img src=\"./Screenshots/image_2.png\" alt=\"Screenshots2\">\nContains source code of the Pluck web app on port 80.</p>\n<p>A hash can be found on <a href=\"http://greenhorn.htb:3000/GreenAdmin/GreenHorn/src/branch/main/data/settings/pass.php\">http://greenhorn.htb:3000/GreenAdmin/GreenHorn/src/branch/main/data/settings/pass.php</a></p>\n<p><img src=\"./Screenshots/image_2.png\" alt=\"Screenshots2\">\nHash can be cracked with hashcat (-m 1700).\n<img src=\"./Screenshots/image_3.png\" alt=\"Screenshots3\"></p>\n<p>Password is used to login to Pluck on <a href=\"http://greenhorn.htb/login.php\">http://greenhorn.htb/login.php</a></p>\n<h1>User.txt</h1>\n<p>Manual exploit of the vulnerability (<a href=\"/o/Og2iEqjeZhsUQ9WJ01Et/s/YLwrMFMuityftyQtpiNM/easy/greenhorn#potential-vulnerability\">Potential Vulnerability</a>).\nAfter login, visit “options” &gt; “manage modules” &gt; “Install a module…”.</p>\n<p><img src=\"./Screenshots/image_4.png\" alt=\"Screenshots4\"></p>\n<p>Create a PHP webshell, zip it and upload to the module installation page. The webshell will be loaded shortly after uploading.</p>\n<p><img src=\"./Screenshots/image_5.png\" alt=\"Screenshots5\">\nThe password found previously can be used to switch to user “junior”.\n<img src=\"./Screenshots/image_6.png\" alt=\"Screenshots6\"></p>\n<h1>Root.txt</h1>\n<p>A PDF file can be found in /home/junior.\n<img src=\"./Screenshots/image_7.png\" alt=\"Screenshots7\"></p>\n<p>The PDF file contains instructions on running openvas as root user. A redacted password is included.\n<img src=\"./Screenshots/image_8.png\" alt=\"Screenshots8\"></p>\n<p>There are multiple tools on Github for bruteforcing the text redacted through pixelation. The one I used is Depix (<a href=\"https://github.com/spipm/Depix\">https://github.com/spipm/Depix</a>).</p>\n<pre v-pre=\"\"><code>python3 depix.py -p ../blurred_password.png -s images/searchimages/debruinseq_notepad_Windows10_closeAndSpaced.png -o output.png\n</code></pre>\n<p>The output shows readable text of the supposedly redacted password.\n<img src=\"./Screenshots/image_9.png\" alt=\"Screenshots9\">\nThe password is then used to switch as user “root”.</p>\n<h1>Lesson Learned</h1>\n<h2>Do Not User Text Pixelation</h2>\n<p>From a person who has used text pixelation to redact sensitive information in images for a long time, this is a very interesting and important lesson. To know that pixelation can be easily reversed (or brute-forced) means that people should not be using this for redacting sensitive information in client reports. Images in this post was later edited to use blur instead of pixels for redaction.</p>\n</div></template>","import { render } from \"./Writeup.md?vue&type=template&id=589962dc\"\nconst script = {}\n\nimport exportComponent from \"../../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createStaticVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_28","script","__exports__","render"],"sourceRoot":""}